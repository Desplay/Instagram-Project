# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthPayload {
  token: String!
}

type Comment {
  body: String!
  created_at: DateTime!
  id: String!
  post_id: String!
  profile_id: String!
  reply_id: String
  updated_at: DateTime!
}

input CommentInput {
  body: String!
  post_id: String!
  replyCommenId: String = null
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input File {
  base64: String
  filename: String
  filetype: String
}

type Follows {
  profile_id: [String!]!
}

type Like {
  createdAt: DateTime!
  profileIdLiked: String!
}

type Likes {
  likes: [Like!]!
}

type Mutation {
  FollowProfile(profile_follow: String!): String!
  SignIn(UserSignIn: UserSignIn!): AuthPayload!
  SignOut: String!
  SignUp(UserSignUp: UserSignUp!): String!
  UnfollowProfile(profile_unfollow: String!): String!
  UpdateProfile(ProfileInput: ProfileInput!): String!
  activeAccount: String!
  changePassword(OTPCode: String!, password: String!): String!
  commentInPost(Comment: CommentInput!): Comment!
  createPost(PostInput: PostInput!): Post!
  deactiveAccount: String!
  deleteComment(comment_id: String!): String!
  deletePost(id: String!): String!
  forgotPassword(NameOrEmail: String!): String!
  likePost(PostId: String!): String!
  resendOTPCode(NameOrEmail: String!): String!
  unlikePost(PostId: String!): String!
  updateComment(body: String!, comment_id: String!): Comment!
  updatePost(PostInput: PostInput!, id: String!): String!
  verifyAccount(OTPCode: String!, email: String!): String!
}

type NotificationDTO {
  body: String!
  id: String!
  postId: String!
  userId: String!
}

type Post {
  comments: [Comment!]!
  content: String!
  id: String!
  imageUrl: String
  likesCount: Float!
  title: String!
}

input PostInput {
  File: File
  Image: Upload
  content: String!
  title: String!
}

type Posts {
  posts: [Post!]!
}

type Profile {
  age: Int
  avatarUri: String
  birthday: DateTime
  description: String
  id: String!
  name: String!
}

input ProfileInput {
  Image: Upload
  age: Int!
  birthday: DateTime!
  description: String!
  name: String!
}

type Profiles {
  profiles: [Profile!]!
}

type Query {
  ShowMyProfile: Profile!
  ShowProfile(profile_id: String!): Profile!
  findProfile(profile_name: String!): Profiles!
  getAllPosts: Posts!
  getAllPostsInDatabase: Posts!
  getFollowing: Follows!
  getLikesDetail(PostId: String!): Likes!
  getNotifications: [NotificationDTO!]!
  getPostsByProfileId(profile_id: String!): Posts!
  getUserFollowerMyProfile: Follows!
  hello: String!
  markAsRead: Boolean!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UserSignIn {
  email: String
  password: String!
  username: String
}

input UserSignUp {
  email: String!
  password: String!
  username: String!
}